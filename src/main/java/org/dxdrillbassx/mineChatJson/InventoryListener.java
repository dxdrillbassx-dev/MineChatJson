package org.dxdrillbassx.mineChatJson;

import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.inventory.InventoryClickEvent;
import org.bukkit.inventory.Inventory;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

import java.util.List;

public class InventoryListener implements Listener {
    private final Main plugin;
    private final ChatManager chatManager;
    private final EmojiManager emojiManager;

    public InventoryListener(Main plugin, ChatManager chatManager, EmojiManager emojiManager) {
        this.plugin = plugin;
        this.chatManager = chatManager;
        this.emojiManager = emojiManager;
    }

    @EventHandler
    public void onInventoryClick(InventoryClickEvent event) {
        String inventoryTitle = event.getView().getTitle();
        if (!inventoryTitle.equals(plugin.getConfig().getString("colors.inv-name", "–í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ üí¨")) &&
                !inventoryTitle.equals("–í—ã–±–æ—Ä —ç–º–æ–¥–∑–∏") &&
                !inventoryTitle.equals(plugin.getConfig().getString("effects.inv-name", "–í—ã–±–æ—Ä —ç—Ñ—Ñ–µ–∫—Ç–∞ üí¨")) &&
                !inventoryTitle.equals(plugin.getConfig().getString("chat.sounds.inv-name", "–í—ã–±–æ—Ä –∑–≤—É–∫–∞ üîä")) &&
                !inventoryTitle.equals(plugin.getConfig().getString("joinmessages.inv-name", "–í—ã–±–æ—Ä –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è üëã"))) {
            return;
        }
        event.setCancelled(true);

        Player player = (Player) event.getWhoClicked();
        ItemStack clicked = event.getCurrentItem();
        if (clicked == null || !clicked.hasItemMeta()) return;

        String clickedName = clicked.getItemMeta().getDisplayName();

        try {
            if (inventoryTitle.equals(plugin.getConfig().getString("colors.inv-name", "–í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ üí¨"))) {
                handleColorInventoryClick(player, clickedName);
            } else if (inventoryTitle.equals("–í—ã–±–æ—Ä —ç–º–æ–¥–∑–∏")) {
                handleEmojiInventoryClick(player, clickedName);
            } else if (inventoryTitle.equals(plugin.getConfig().getString("effects.inv-name", "–í—ã–±–æ—Ä —ç—Ñ—Ñ–µ–∫—Ç–∞ üí¨"))) {
                handleEffectInventoryClick(player, clickedName);
            } else if (inventoryTitle.equals(plugin.getConfig().getString("chat.sounds.inv-name", "–í—ã–±–æ—Ä –∑–≤—É–∫–∞ üîä"))) {
                handleSoundInventoryClick(player, clickedName);
            } else if (inventoryTitle.equals(plugin.getConfig().getString("joinmessages.inv-name", "–í—ã–±–æ—Ä –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è üëã"))) {
                handleJoinMessageInventoryClick(player, clickedName);
            }
        } catch (Exception e) {
            plugin.getLogger().severe("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–ª–∏–∫–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: " + e.getMessage());
            e.printStackTrace();
            player.sendMessage(ChatColor.RED + "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ! üòî");
        }
    }

    private void handleColorInventoryClick(Player player, String clickedName) {
        String currentColor = plugin.getDatabaseManager().getPlayerColor(player.getUniqueId());

        if (clickedName.equals(ChatColor.translateAlternateColorCodes('&',
                plugin.getConfig().getString("colors.remove-item.name", "&4–°–±—Ä–æ—Å–∏—Ç—å —Ü–≤–µ—Ç üóëÔ∏è")))) {
            plugin.getDatabaseManager().removePlayerColor(player.getUniqueId());
            player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                    plugin.getConfig().getString("colors.msgs.deleted", "&e–¶–≤–µ—Ç —Å–±—Ä–æ—à–µ–Ω –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ ‚ö™")));
            player.playSound(player.getLocation(), Sound.ENTITY_EXPERIENCE_ORB_PICKUP, 1.0f, 1.0f);
            player.closeInventory();
            return;
        }

        if (plugin.getConfig().getConfigurationSection("colors.sitems") == null) {
            plugin.getLogger().severe("–°–µ–∫—Ü–∏—è 'colors.sitems' –≤ –∫–æ–Ω—Ñ–∏–≥–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!");
            player.sendMessage(ChatColor.RED + "–û—à–∏–±–∫–∞: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ü–≤–µ—Ç–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞! üòî");
            return;
        }

        for (String colorKey : plugin.getConfig().getConfigurationSection("colors.sitems").getKeys(false)) {
            String path = "colors.sitems." + colorKey;
            String name = ChatColor.translateAlternateColorCodes('&',
                    plugin.getConfig().getString(path + ".name", "&c–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ü–≤–µ—Ç"));
            String format = plugin.getConfig().getString(path + ".format");

            if (clickedName.equals(name)) {
                if (!player.hasPermission("minechatjson.color." + colorKey.toLowerCase())) {
                    player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                            plugin.getConfig().getString("colors.msgs.no-perm", "&c–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ üö´")));
                    return;
                }
                if (format == null) {
                    plugin.getLogger().warning("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Ü–≤–µ—Ç–∞ '" + colorKey + "'");
                    player.sendMessage(ChatColor.RED + "–û—à–∏–±–∫–∞: –§–æ—Ä–º–∞—Ç —Ü–≤–µ—Ç–∞ –Ω–µ –∑–∞–¥–∞–Ω! üòî");
                    return;
                }
                if (format.equals(currentColor)) {
                    player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                            plugin.getConfig().getString("colors.msgs.already-choosen", "&e–≠—Ç–æ—Ç —Ü–≤–µ—Ç —É–∂–µ –≤—ã–±—Ä–∞–Ω üé®")));
                    return;
                }
                plugin.getDatabaseManager().setPlayerColor(player.getUniqueId(), format);
                player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                        plugin.getConfig().getString("colors.msgs.color-set", "&a–¶–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! ‚úÖ")));
                player.playSound(player.getLocation(), Sound.ENTITY_EXPERIENCE_ORB_PICKUP, 1.0f, 1.0f);
                player.closeInventory();
                return;
            }
        }
    }

    private void handleEmojiInventoryClick(Player player, String clickedName) {
        for (String emojiKey : plugin.getConfig().getConfigurationSection("emojis").getKeys(false)) {
            String symbol = plugin.getConfig().getString("emojis." + emojiKey + ".symbol");
            if (clickedName.equals(symbol + " :" + emojiKey + ":")) {
                if (!player.hasPermission("minechatjson.emoji." + emojiKey)) {
                    player.sendMessage(ChatColor.RED + "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —ç—Ç–æ—Ç —ç–º–æ–¥–∑–∏! üö´");
                    return;
                }
                player.chat(":" + emojiKey + ":");
                player.closeInventory();
                player.playSound(player.getLocation(), Sound.ENTITY_EXPERIENCE_ORB_PICKUP, 1.0f, 1.0f);
                return;
            }
        }
    }

    private void handleEffectInventoryClick(Player player, String clickedName) {
        String currentEffect = plugin.getDatabaseManager().getPlayerEffect(player.getUniqueId());

        if (clickedName.equals(ChatColor.translateAlternateColorCodes('&',
                plugin.getConfig().getString("effects.remove-item.name", "&4–°–±—Ä–æ—Å–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç üóëÔ∏è")))) {
            plugin.getDatabaseManager().removePlayerEffect(player.getUniqueId());
            player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                    plugin.getConfig().getString("effects.msgs.deleted", "&e–≠—Ñ—Ñ–µ–∫—Ç —Å–±—Ä–æ—à–µ–Ω –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ ‚ö™")));
            player.playSound(player.getLocation(), Sound.ENTITY_EXPERIENCE_ORB_PICKUP, 1.0f, 1.0f);
            player.closeInventory();
            return;
        }

        if (plugin.getConfig().getConfigurationSection("effects.sitems") == null) {
            plugin.getLogger().severe("–°–µ–∫—Ü–∏—è 'effects.sitems' –≤ –∫–æ–Ω—Ñ–∏–≥–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!");
            player.sendMessage(ChatColor.RED + "–û—à–∏–±–∫–∞: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —ç—Ñ—Ñ–µ–∫—Ç–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞! üòî");
            return;
        }

        for (String effectKey : plugin.getConfig().getConfigurationSection("effects.sitems").getKeys(false)) {
            String path = "effects.sitems." + effectKey;
            String name = ChatColor.translateAlternateColorCodes('&',
                    plugin.getConfig().getString(path + ".name", "&c–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç"));
            String format = plugin.getConfig().getString(path + ".format");

            if (clickedName.equals(name)) {
                if (!player.hasPermission("minechatjson.effect." + effectKey.toLowerCase())) {
                    player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                            plugin.getConfig().getString("effects.msgs.no-perm", "&c–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ üö´")));
                    return;
                }
                if (format == null) {
                    plugin.getLogger().warning("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ '" + effectKey + "'");
                    player.sendMessage(ChatColor.RED + "–û—à–∏–±–∫–∞: –§–æ—Ä–º–∞—Ç —ç—Ñ—Ñ–µ–∫—Ç–∞ –Ω–µ –∑–∞–¥–∞–Ω! üòî");
                    return;
                }
                if (format.equals(currentEffect)) {
                    player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                            plugin.getConfig().getString("effects.msgs.already-choosen", "&e–≠—Ç–æ—Ç —ç—Ñ—Ñ–µ–∫—Ç —É–∂–µ –≤—ã–±—Ä–∞–Ω üé®")));
                    return;
                }
                plugin.getDatabaseManager().setPlayerEffect(player.getUniqueId(), format);
                player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                        plugin.getConfig().getString("effects.msgs.effect-set", "&a–≠—Ñ—Ñ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! ‚úÖ")));
                player.playSound(player.getLocation(), Sound.ENTITY_EXPERIENCE_ORB_PICKUP, 1.0f, 1.0f);
                player.closeInventory();
                return;
            }
        }
    }

    private void handleSoundInventoryClick(Player player, String clickedName) {
        String currentSound = plugin.getDatabaseManager().getPlayerSound(player.getUniqueId());

        if (clickedName.equals(ChatColor.translateAlternateColorCodes('&',
                plugin.getConfig().getString("chat.sounds.remove-item.name", "&4–°–±—Ä–æ—Å–∏—Ç—å –∑–≤—É–∫ üóëÔ∏è")))) {
            plugin.getDatabaseManager().setChatSound(player.getUniqueId(), true,
                    plugin.getConfig().getString("chat.sound.type", "minecraft:entity.experience_orb.pickup"));
            player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                    plugin.getConfig().getString("chat.sounds.msgs.deleted", "&e–ó–≤—É–∫ —Å–±—Ä–æ—à–µ–Ω –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ ‚ö™")));
            player.playSound(player.getLocation(), Sound.ENTITY_EXPERIENCE_ORB_PICKUP, 1.0f, 1.0f);
            player.closeInventory();
            return;
        }

        if (plugin.getConfig().getConfigurationSection("chat.sounds.sitems") == null) {
            plugin.getLogger().severe("–°–µ–∫—Ü–∏—è 'chat.sounds.sitems' –≤ –∫–æ–Ω—Ñ–∏–≥–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!");
            player.sendMessage(ChatColor.RED + "–û—à–∏–±–∫–∞: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–≤—É–∫–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞! üòî");
            return;
        }

        for (String soundKey : plugin.getConfig().getConfigurationSection("chat.sounds.sitems").getKeys(false)) {
            String path = "chat.sounds.sitems." + soundKey;
            String name = ChatColor.translateAlternateColorCodes('&',
                    plugin.getConfig().getString(path + ".name", "&c–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–≤—É–∫"));
            String sound = plugin.getConfig().getString(path + ".sound");

            if (clickedName.equals(name)) {
                if (!player.hasPermission("minechatjson.sound." + soundKey.toLowerCase())) {
                    player.sendMessage(ChatColor.RED + "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ —ç—Ç–æ–≥–æ –∑–≤—É–∫–∞! üö´");
                    return;
                }
                if (sound == null) {
                    plugin.getLogger().warning("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∑–≤—É–∫ –¥–ª—è '" + soundKey + "'");
                    player.sendMessage(ChatColor.RED + "–û—à–∏–±–∫–∞: –ó–≤—É–∫ –Ω–µ –∑–∞–¥–∞–Ω! üòî");
                    return;
                }
                if (sound.equals(currentSound)) {
                    player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                            "&e–≠—Ç–æ—Ç –∑–≤—É–∫ —É–∂–µ –≤—ã–±—Ä–∞–Ω üîä"));
                    return;
                }
                plugin.getDatabaseManager().setChatSound(player.getUniqueId(), true, sound);
                player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                        "&a–ó–≤—É–∫ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! ‚úÖ"));
                player.playSound(player.getLocation(), Sound.ENTITY_EXPERIENCE_ORB_PICKUP, 1.0f, 1.0f);
                player.closeInventory();
                return;
            }
        }
    }

    private void handleJoinMessageInventoryClick(Player player, String clickedName) {
        String currentMessage = plugin.getDatabaseManager().getPlayerJoinMessage(player.getUniqueId());

        if (clickedName.equals(ChatColor.translateAlternateColorCodes('&',
                plugin.getConfig().getString("joinmessages.remove-item.name", "&4–°–±—Ä–æ—Å–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ üóëÔ∏è")))) {
            plugin.getDatabaseManager().removePlayerJoinMessage(player.getUniqueId());
            player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                    "&e–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ –¥–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ ‚ö™"));
            player.playSound(player.getLocation(), Sound.ENTITY_EXPERIENCE_ORB_PICKUP, 1.0f, 1.0f);
            player.closeInventory();
            return;
        }

        if (plugin.getConfig().getConfigurationSection("joinmessages.sitems") == null) {
            plugin.getLogger().severe("–°–µ–∫—Ü–∏—è 'joinmessages.sitems' –≤ –∫–æ–Ω—Ñ–∏–≥–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!");
            player.sendMessage(ChatColor.RED + "–û—à–∏–±–∫–∞: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞! üòî");
            return;
        }

        for (String messageKey : plugin.getConfig().getConfigurationSection("joinmessages.sitems").getKeys(false)) {
            String path = "joinmessages.sitems." + messageKey;
            String name = ChatColor.translateAlternateColorCodes('&',
                    plugin.getConfig().getString(path + ".name", "&c–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"));
            String message = plugin.getConfig().getString(path + ".message");

            if (clickedName.equals(name)) {
                if (!player.hasPermission("minechatjson.joinmessage")) {
                    player.sendMessage(ChatColor.RED + "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è! üö´");
                    return;
                }
                if (message == null) {
                    plugin.getLogger().warning("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è '" + messageKey + "'");
                    player.sendMessage(ChatColor.RED + "–û—à–∏–±–∫–∞: –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∑–∞–¥–∞–Ω–æ! üòî");
                    return;
                }
                if (message.equals(currentMessage)) {
                    player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                            "&e–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ –≤—ã–±—Ä–∞–Ω–æ üëã"));
                    return;
                }
                plugin.getDatabaseManager().setPlayerJoinMessage(player.getUniqueId(), message);
                player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                        "&a–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ! ‚úÖ"));
                player.playSound(player.getLocation(), Sound.ENTITY_EXPERIENCE_ORB_PICKUP, 1.0f, 1.0f);
                player.closeInventory();
                return;
            }
        }
    }

    public Inventory createColorInventory(Player player) {
        Inventory inv = org.bukkit.Bukkit.createInventory(null, 9,
                plugin.getConfig().getString("colors.inv-name", "–í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ üí¨"));
        String currentColor = plugin.getDatabaseManager().getPlayerColor(player.getUniqueId());

        if (plugin.getConfig().getConfigurationSection("colors.sitems") == null) {
            plugin.getLogger().severe("–°–µ–∫—Ü–∏—è 'colors.sitems' –≤ –∫–æ–Ω—Ñ–∏–≥–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!");
            return inv;
        }

        for (String colorKey : plugin.getConfig().getConfigurationSection("colors.sitems").getKeys(false)) {
            String path = "colors.sitems." + colorKey;
            String name = plugin.getConfig().getString(path + ".name", "&c–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ü–≤–µ—Ç");
            String materialName = plugin.getConfig().getString(path + ".material", "WHITE_WOOL");
            int position = plugin.getConfig().getInt(path + ".position", 1);
            List<String> lore = plugin.getConfig().getStringList(path + ".lore");

            Material material = Material.getMaterial(materialName.toUpperCase());
            if (material == null) {
                plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª '" + materialName + "' –¥–ª—è —Ü–≤–µ—Ç–∞ '" + colorKey + "', –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è WHITE_WOOL");
                material = Material.WHITE_WOOL;
            }

            ItemStack item = new ItemStack(material, 1);
            ItemMeta meta = item.getItemMeta();
            if (meta != null) {
                meta.setDisplayName(ChatColor.translateAlternateColorCodes('&', name));
                meta.setLore(lore.stream().map(l -> ChatColor.translateAlternateColorCodes('&', l)).toList());
                item.setItemMeta(meta);
            }
            if (position >= 1 && position <= 9) {
                inv.setItem(position - 1, item);
            } else {
                plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è '" + position + "' –¥–ª—è —Ü–≤–µ—Ç–∞ '" + colorKey + "', –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è");
            }
        }

        String removeMaterialName = plugin.getConfig().getString("colors.remove-item.material", "BARRIER");
        Material removeMaterial = Material.getMaterial(removeMaterialName.toUpperCase());
        if (removeMaterial == null) {
            plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª '" + removeMaterialName + "' –¥–ª—è remove-item, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è BARRIER");
            removeMaterial = Material.BARRIER;
        }
        ItemStack removeItem = new ItemStack(removeMaterial, 1);
        ItemMeta removeMeta = removeItem.getItemMeta();
        if (removeMeta != null) {
            removeMeta.setDisplayName(ChatColor.translateAlternateColorCodes('&',
                    plugin.getConfig().getString("colors.remove-item.name", "&4–°–±—Ä–æ—Å–∏—Ç—å —Ü–≤–µ—Ç üóëÔ∏è")));
            removeMeta.setLore(plugin.getConfig().getStringList("colors.remove-item.lore").stream()
                    .map(l -> ChatColor.translateAlternateColorCodes('&', l)).toList());
            removeItem.setItemMeta(removeMeta);
        }
        int removePosition = plugin.getConfig().getInt("colors.remove-item.position", 9);
        if (removePosition >= 1 && removePosition <= 9) {
            inv.setItem(removePosition - 1, removeItem);
        } else {
            plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è '" + removePosition + "' –¥–ª—è remove-item, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ª–æ—Ç 8");
            inv.setItem(8, removeItem);
        }

        return inv;
    }

    public Inventory createEffectInventory(Player player) {
        Inventory inv = org.bukkit.Bukkit.createInventory(null, 9,
                plugin.getConfig().getString("effects.inv-name", "–í—ã–±–æ—Ä —ç—Ñ—Ñ–µ–∫—Ç–∞ üí¨"));
        String currentEffect = plugin.getDatabaseManager().getPlayerEffect(player.getUniqueId());

        if (plugin.getConfig().getConfigurationSection("effects.sitems") == null) {
            plugin.getLogger().severe("–°–µ–∫—Ü–∏—è 'effects.sitems' –≤ –∫–æ–Ω—Ñ–∏–≥–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!");
            return inv;
        }

        for (String effectKey : plugin.getConfig().getConfigurationSection("effects.sitems").getKeys(false)) {
            String path = "effects.sitems." + effectKey;
            String name = plugin.getConfig().getString(path + ".name", "&c–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç");
            String materialName = plugin.getConfig().getString(path + ".material", "FEATHER");
            int position = plugin.getConfig().getInt(path + ".position", 1);
            List<String> lore = plugin.getConfig().getStringList(path + ".lore");

            Material material = Material.getMaterial(materialName.toUpperCase());
            if (material == null) {
                plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª '" + materialName + "' –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ '" + effectKey + "', –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è FEATHER");
                material = Material.FEATHER;
            }

            ItemStack item = new ItemStack(material, 1);
            ItemMeta meta = item.getItemMeta();
            if (meta != null) {
                meta.setDisplayName(ChatColor.translateAlternateColorCodes('&', name));
                meta.setLore(lore.stream().map(l -> ChatColor.translateAlternateColorCodes('&', l)).toList());
                item.setItemMeta(meta);
            }
            if (position >= 1 && position <= 9) {
                inv.setItem(position - 1, item);
            } else {
                plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è '" + position + "' –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ '" + effectKey + "', –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è");
            }
        }

        String removeMaterialName = plugin.getConfig().getString("effects.remove-item.material", "BARRIER");
        Material removeMaterial = Material.getMaterial(removeMaterialName.toUpperCase());
        if (removeMaterial == null) {
            plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª '" + removeMaterialName + "' –¥–ª—è remove-item, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è BARRIER");
            removeMaterial = Material.BARRIER;
        }
        ItemStack removeItem = new ItemStack(removeMaterial, 1);
        ItemMeta removeMeta = removeItem.getItemMeta();
        if (removeMeta != null) {
            removeMeta.setDisplayName(ChatColor.translateAlternateColorCodes('&',
                    plugin.getConfig().getString("effects.remove-item.name", "&4–°–±—Ä–æ—Å–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç üóëÔ∏è")));
            removeMeta.setLore(plugin.getConfig().getStringList("effects.remove-item.lore").stream()
                    .map(l -> ChatColor.translateAlternateColorCodes('&', l)).toList());
            removeItem.setItemMeta(removeMeta);
        }
        int removePosition = plugin.getConfig().getInt("effects.remove-item.position", 9);
        if (removePosition >= 1 && removePosition <= 9) {
            inv.setItem(removePosition - 1, removeItem);
        } else {
            plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è '" + removePosition + "' –¥–ª—è remove-item, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ª–æ—Ç 8");
            inv.setItem(8, removeItem);
        }

        return inv;
    }

    public Inventory createSoundInventory(Player player) {
        Inventory inv = org.bukkit.Bukkit.createInventory(null, 9,
                plugin.getConfig().getString("chat.sounds.inv-name", "–í—ã–±–æ—Ä –∑–≤—É–∫–∞ üîä"));
        String currentSound = plugin.getDatabaseManager().getPlayerSound(player.getUniqueId());

        if (plugin.getConfig().getConfigurationSection("chat.sounds.sitems") == null) {
            plugin.getLogger().severe("–°–µ–∫—Ü–∏—è 'chat.sounds.sitems' –≤ –∫–æ–Ω—Ñ–∏–≥–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!");
            return inv;
        }

        for (String soundKey : plugin.getConfig().getConfigurationSection("chat.sounds.sitems").getKeys(false)) {
            String path = "chat.sounds.sitems." + soundKey;
            String name = plugin.getConfig().getString(path + ".name", "&c–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∑–≤—É–∫");
            String materialName = plugin.getConfig().getString(path + ".material", "NOTE_BLOCK");
            int position = plugin.getConfig().getInt(path + ".position", 1);
            List<String> lore = plugin.getConfig().getStringList(path + ".lore");

            Material material = Material.getMaterial(materialName.toUpperCase());
            if (material == null) {
                plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª '" + materialName + "' –¥–ª—è –∑–≤—É–∫–∞ '" + soundKey + "', –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è NOTE_BLOCK");
                material = Material.NOTE_BLOCK;
            }

            ItemStack item = new ItemStack(material, 1);
            ItemMeta meta = item.getItemMeta();
            if (meta != null) {
                meta.setDisplayName(ChatColor.translateAlternateColorCodes('&', name));
                meta.setLore(lore.stream().map(l -> ChatColor.translateAlternateColorCodes('&', l)).toList());
                item.setItemMeta(meta);
            }
            if (position >= 1 && position <= 9) {
                inv.setItem(position - 1, item);
            } else {
                plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è '" + position + "' –¥–ª—è –∑–≤—É–∫–∞ '" + soundKey + "', –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è");
            }
        }

        String removeMaterialName = plugin.getConfig().getString("chat.sounds.remove-item.material", "BARRIER");
        Material removeMaterial = Material.getMaterial(removeMaterialName.toUpperCase());
        if (removeMaterial == null) {
            plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª '" + removeMaterialName + "' –¥–ª—è remove-item, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è BARRIER");
            removeMaterial = Material.BARRIER;
        }
        ItemStack removeItem = new ItemStack(removeMaterial, 1);
        ItemMeta removeMeta = removeItem.getItemMeta();
        if (removeMeta != null) {
            removeMeta.setDisplayName(ChatColor.translateAlternateColorCodes('&',
                    plugin.getConfig().getString("chat.sounds.remove-item.name", "&4–°–±—Ä–æ—Å–∏—Ç—å –∑–≤—É–∫ üóëÔ∏è")));
            removeMeta.setLore(plugin.getConfig().getStringList("chat.sounds.remove-item.lore").stream()
                    .map(l -> ChatColor.translateAlternateColorCodes('&', l)).toList());
            removeItem.setItemMeta(removeMeta);
        }
        int removePosition = plugin.getConfig().getInt("chat.sounds.remove-item.position", 9);
        if (removePosition >= 1 && removePosition <= 9) {
            inv.setItem(removePosition - 1, removeItem);
        } else {
            plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è '" + removePosition + "' –¥–ª—è remove-item, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ª–æ—Ç 8");
            inv.setItem(8, removeItem);
        }

        return inv;
    }

    public Inventory createJoinMessageInventory(Player player) {
        Inventory inv = org.bukkit.Bukkit.createInventory(null, 9,
                plugin.getConfig().getString("joinmessages.inv-name", "–í—ã–±–æ—Ä –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è üëã"));
        String currentMessage = plugin.getDatabaseManager().getPlayerJoinMessage(player.getUniqueId());

        if (plugin.getConfig().getConfigurationSection("joinmessages.sitems") == null) {
            plugin.getLogger().severe("–°–µ–∫—Ü–∏—è 'joinmessages.sitems' –≤ –∫–æ–Ω—Ñ–∏–≥–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞!");
            return inv;
        }

        for (String messageKey : plugin.getConfig().getConfigurationSection("joinmessages.sitems").getKeys(false)) {
            String path = "joinmessages.sitems." + messageKey;
            String name = plugin.getConfig().getString(path + ".name", "&c–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ");
            String materialName = plugin.getConfig().getString(path + ".material", "PAPER");
            int position = plugin.getConfig().getInt(path + ".position", 1);
            List<String> lore = plugin.getConfig().getStringList(path + ".lore");

            Material material = Material.getMaterial(materialName.toUpperCase());
            if (material == null) {
                plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª '" + materialName + "' –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è '" + messageKey + "', –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è PAPER");
                material = Material.PAPER;
            }

            ItemStack item = new ItemStack(material, 1);
            ItemMeta meta = item.getItemMeta();
            if (meta != null) {
                meta.setDisplayName(ChatColor.translateAlternateColorCodes('&', name));
                meta.setLore(lore.stream().map(l -> ChatColor.translateAlternateColorCodes('&', l)).toList());
                item.setItemMeta(meta);
            }
            if (position >= 1 && position <= 9) {
                inv.setItem(position - 1, item);
            } else {
                plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è '" + position + "' –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è '" + messageKey + "', –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è");
            }
        }

        String removeMaterialName = plugin.getConfig().getString("joinmessages.remove-item.material", "BARRIER");
        Material removeMaterial = Material.getMaterial(removeMaterialName.toUpperCase());
        if (removeMaterial == null) {
            plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª '" + removeMaterialName + "' –¥–ª—è remove-item, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è BARRIER");
            removeMaterial = Material.BARRIER;
        }
        ItemStack removeItem = new ItemStack(removeMaterial, 1);
        ItemMeta removeMeta = removeItem.getItemMeta();
        if (removeMeta != null) {
            removeMeta.setDisplayName(ChatColor.translateAlternateColorCodes('&',
                    plugin.getConfig().getString("joinmessages.remove-item.name", "&4–°–±—Ä–æ—Å–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ üóëÔ∏è")));
            removeMeta.setLore(plugin.getConfig().getStringList("joinmessages.remove-item.lore").stream()
                    .map(l -> ChatColor.translateAlternateColorCodes('&', l)).toList());
            removeItem.setItemMeta(removeMeta);
        }
        int removePosition = plugin.getConfig().getInt("joinmessages.remove-item.position", 9);
        if (removePosition >= 1 && removePosition <= 9) {
            inv.setItem(removePosition - 1, removeItem);
        } else {
            plugin.getLogger().warning("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è '" + removePosition + "' –¥–ª—è remove-item, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ª–æ—Ç 8");
            inv.setItem(8, removeItem);
        }

        return inv;
    }
}